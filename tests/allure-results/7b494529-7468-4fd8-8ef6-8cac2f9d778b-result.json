{"name": "test_mvideo", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"/product/smartfon-xiaomi-poco-c75-128gb-6gb-zelenyi-3g-4g-2sim-6-88-ips-1640x72-2062028/\" data-meta-name=\"Snippet__title\" title=\"...\" class=\"app-catalog-9gnskf e1259i3g0\">Смартфон Xiaomi Poco C75 6/128Gb,  зеленый</a> is not clickable at point (529, 742). Other element would receive the click: <span class=\"ec0asgb0 e106ikdt0 app-catalog-1hsqtrc e1gjr6xo0\" color=\"None\">...</span>\n  (Session info: chrome=131.0.6778.265)\nStacktrace:\n0   chromedriver                        0x0000000100c6baf0 cxxbridge1$str$ptr + 3651580\n1   chromedriver                        0x0000000100c64340 cxxbridge1$str$ptr + 3620940\n2   chromedriver                        0x00000001006cc4b4 cxxbridge1$string$len + 89224\n3   chromedriver                        0x000000010071612c cxxbridge1$string$len + 391424\n4   chromedriver                        0x000000010071477c cxxbridge1$string$len + 384848\n5   chromedriver                        0x00000001007126c0 cxxbridge1$string$len + 376468\n6   chromedriver                        0x0000000100711af8 cxxbridge1$string$len + 373452\n7   chromedriver                        0x0000000100706fbc cxxbridge1$string$len + 329616\n8   chromedriver                        0x0000000100706a10 cxxbridge1$string$len + 328164\n9   chromedriver                        0x000000010074a0fc cxxbridge1$string$len + 604368\n10  chromedriver                        0x00000001007050b0 cxxbridge1$string$len + 321668\n11  chromedriver                        0x0000000100705d00 cxxbridge1$string$len + 324820\n12  chromedriver                        0x0000000100c36e34 cxxbridge1$str$ptr + 3435328\n13  chromedriver                        0x0000000100c3a14c cxxbridge1$str$ptr + 3448408\n14  chromedriver                        0x0000000100c1e1a8 cxxbridge1$str$ptr + 3333812\n15  chromedriver                        0x0000000100c3aa0c cxxbridge1$str$ptr + 3450648\n16  chromedriver                        0x0000000100c0f9b4 cxxbridge1$str$ptr + 3274432\n17  chromedriver                        0x0000000100c55120 cxxbridge1$str$ptr + 3558956\n18  chromedriver                        0x0000000100c5529c cxxbridge1$str$ptr + 3559336\n19  chromedriver                        0x0000000100c63fb4 cxxbridge1$str$ptr + 3620032\n20  libsystem_pthread.dylib             0x000000018080c2e4 _pthread_start + 136\n21  libsystem_pthread.dylib             0x00000001808070fc thread_start + 8", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d3c27155d52f39f377947a107bf8e2f3\")>\n\n    def test_mvideo(browser):\n        m_video = MVideo(browser)\n        m_video.open_main_page()\n>       m_video.open_catalog()\n\ntest_catalog.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/mvideo.py:48: in open_catalog\n    self.click_random_element(self.LIST_OF_PHONES)\n../pages/base_page.py:99: in click_random_element\n    random.choice(self.find_elements(locator)).click()\n../.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x101d06250>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...00018080c2e4 _pthread_start + 136\\\\n21  libsystem_pthread.dylib             0x00000001808070fc thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"/product/smartfon-xiaomi-poco-c75-128gb-6gb-zelenyi-3g-4g-2sim-6-88-ips-1640x72-2062028/\" data-meta-name=\"Snippet__title\" title=\"...\" class=\"app-catalog-9gnskf e1259i3g0\">Смартфон Xiaomi Poco C75 6/128Gb,  зеленый</a> is not clickable at point (529, 742). Other element would receive the click: <span class=\"ec0asgb0 e106ikdt0 app-catalog-1hsqtrc e1gjr6xo0\" color=\"None\">...</span>\nE         (Session info: chrome=131.0.6778.265)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000100c6baf0 cxxbridge1$str$ptr + 3651580\nE       1   chromedriver                        0x0000000100c64340 cxxbridge1$str$ptr + 3620940\nE       2   chromedriver                        0x00000001006cc4b4 cxxbridge1$string$len + 89224\nE       3   chromedriver                        0x000000010071612c cxxbridge1$string$len + 391424\nE       4   chromedriver                        0x000000010071477c cxxbridge1$string$len + 384848\nE       5   chromedriver                        0x00000001007126c0 cxxbridge1$string$len + 376468\nE       6   chromedriver                        0x0000000100711af8 cxxbridge1$string$len + 373452\nE       7   chromedriver                        0x0000000100706fbc cxxbridge1$string$len + 329616\nE       8   chromedriver                        0x0000000100706a10 cxxbridge1$string$len + 328164\nE       9   chromedriver                        0x000000010074a0fc cxxbridge1$string$len + 604368\nE       10  chromedriver                        0x00000001007050b0 cxxbridge1$string$len + 321668\nE       11  chromedriver                        0x0000000100705d00 cxxbridge1$string$len + 324820\nE       12  chromedriver                        0x0000000100c36e34 cxxbridge1$str$ptr + 3435328\nE       13  chromedriver                        0x0000000100c3a14c cxxbridge1$str$ptr + 3448408\nE       14  chromedriver                        0x0000000100c1e1a8 cxxbridge1$str$ptr + 3333812\nE       15  chromedriver                        0x0000000100c3aa0c cxxbridge1$str$ptr + 3450648\nE       16  chromedriver                        0x0000000100c0f9b4 cxxbridge1$str$ptr + 3274432\nE       17  chromedriver                        0x0000000100c55120 cxxbridge1$str$ptr + 3558956\nE       18  chromedriver                        0x0000000100c5529c cxxbridge1$str$ptr + 3559336\nE       19  chromedriver                        0x0000000100c63fb4 cxxbridge1$str$ptr + 3620032\nE       20  libsystem_pthread.dylib             0x000000018080c2e4 _pthread_start + 136\nE       21  libsystem_pthread.dylib             0x00000001808070fc thread_start + 8\n\n../.venv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException"}, "steps": [{"name": "Открытие браузера", "status": "passed", "parameters": [{"name": "url", "value": "'https://www.citilink.ru/'"}], "start": 1736849427930, "stop": 1736849428910}, {"name": "Нажатие на элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//span[@class='app-catalog-19y4hmw e1fnp08x0' and text()='Каталог товаров']\")"}], "start": 1736849428910, "stop": 1736849429253}, {"name": "Нажатие на элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//a[@class='app-catalog-yhixh0 euu8i7z0' and text()='Смартфоны и планшеты']\")"}], "start": 1736849429253, "stop": 1736849430037}, {"name": "Нажатие на элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//button[@class ='e4uhfkv0 app-catalog-1lxdbiq e4mggex0']\")"}], "start": 1736849430037, "stop": 1736849430069}, {"name": "Нажатие на элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//span[@class='app-catalog-pt72uc e66p2eb0' and text()='Смартфоны']\")"}], "start": 1736849430070, "stop": 1736849430495}, {"name": "Нажатие на ранжомный элемент", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"/product/smartfon-xiaomi-poco-c75-128gb-6gb-zelenyi-3g-4g-2sim-6-88-ips-1640x72-2062028/\" data-meta-name=\"Snippet__title\" title=\"...\" class=\"app-catalog-9gnskf e1259i3g0\">Смартфон Xiaomi Poco C75 6/128Gb,  зеленый</a> is not clickable at point (529, 742). Other element would receive the click: <span class=\"ec0asgb0 e106ikdt0 app-catalog-1hsqtrc e1gjr6xo0\" color=\"None\">...</span>\n  (Session info: chrome=131.0.6778.265)\nStacktrace:\n0   chromedriver                        0x0000000100c6baf0 cxxbridge1$str$ptr + 3651580\n1   chromedriver                        0x0000000100c64340 cxxbridge1$str$ptr + 3620940\n2   chromedriver                        0x00000001006cc4b4 cxxbridge1$string$len + 89224\n3   chromedriver                        0x000000010071612c cxxbridge1$string$len + 391424\n4   chromedriver                        0x000000010071477c cxxbridge1$string$len + 384848\n5   chromedriver                        0x00000001007126c0 cxxbridge1$string$len + 376468\n6   chromedriver                        0x0000000100711af8 cxxbridge1$string$len + 373452\n7   chromedriver                        0x0000000100706fbc cxxbridge1$string$len + 329616\n8   chromedriver                        0x0000000100706a10 cxxbridge1$string$len + 328164\n9   chromedriver                        0x000000010074a0fc cxxbridge1$string$len + 604368\n10  chromedriver                        0x00000001007050b0 cxxbridge1$string$len + 321668\n11  chromedriver                        0x0000000100705d00 cxxbridge1$string$len + 324820\n12  chromedriver                        0x0000000100c36e34 cxxbridge1$str$ptr + 3435328\n13  chromedriver                        0x0000000100c3a14c cxxbridge1$str$ptr + 3448408\n14  chromedriver                        0x0000000100c1e1a8 cxxbridge1$str$ptr + 3333812\n15  chromedriver                        0x0000000100c3aa0c cxxbridge1$str$ptr + 3450648\n16  chromedriver                        0x0000000100c0f9b4 cxxbridge1$str$ptr + 3274432\n17  chromedriver                        0x0000000100c55120 cxxbridge1$str$ptr + 3558956\n18  chromedriver                        0x0000000100c5529c cxxbridge1$str$ptr + 3559336\n19  chromedriver                        0x0000000100c63fb4 cxxbridge1$str$ptr + 3620032\n20  libsystem_pthread.dylib             0x000000018080c2e4 _pthread_start + 136\n21  libsystem_pthread.dylib             0x00000001808070fc thread_start + 8\n\n", "trace": "  File \"/Users/anton/python_projects/environments/lgcity/.venv/lib/python3.9/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/anton/python_projects/environments/lgcity/pages/base_page.py\", line 99, in click_random_element\n    random.choice(self.find_elements(locator)).click()\n  File \"/Users/anton/python_projects/environments/lgcity/.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/Users/anton/python_projects/environments/lgcity/.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"/Users/anton/python_projects/environments/lgcity/.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/anton/python_projects/environments/lgcity/.venv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "locator", "value": "('xpath', \"//a[@class='app-catalog-9gnskf e1259i3g0']\")"}], "start": 1736849430698, "stop": 1736849433914}], "start": 1736849427930, "stop": 1736849433925, "uuid": "9484f607-9daa-4a64-9f96-748af97eaad8", "historyId": "98ea4cbaf23f9d2caa83d42355b3fbf4", "testCaseId": "98ea4cbaf23f9d2caa83d42355b3fbf4", "fullName": "tests.test_catalog#test_mvideo", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_catalog"}, {"name": "host", "value": "MacBook-Pro-Anton.local"}, {"name": "thread", "value": "12374-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_catalog"}]}