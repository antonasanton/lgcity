{"name": "test_citilink", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSelectorException: Message: invalid selector\nfrom javascript error: {\"status\":32,\"value\":\"Unable to locate an element with the xpath expression //a[@data-meta-name='DesktopMenu__category--menu-item' because of the following error:\\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//a[@data-meta-name='DesktopMenu__category--menu-item'' is not a valid XPath expression.\"}\n  (Session info: chrome=131.0.6778.265); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nStacktrace:\n0   chromedriver                        0x0000000102d4faf0 cxxbridge1$str$ptr + 3651580\n1   chromedriver                        0x0000000102d48340 cxxbridge1$str$ptr + 3620940\n2   chromedriver                        0x00000001027b04b4 cxxbridge1$string$len + 89224\n3   chromedriver                        0x00000001027b5398 cxxbridge1$string$len + 109420\n4   chromedriver                        0x00000001027b73e8 cxxbridge1$string$len + 117692\n5   chromedriver                        0x00000001027b7490 cxxbridge1$string$len + 117860\n6   chromedriver                        0x00000001027f45dc cxxbridge1$string$len + 368048\n7   chromedriver                        0x000000010282e0fc cxxbridge1$string$len + 604368\n8   chromedriver                        0x00000001027e90b0 cxxbridge1$string$len + 321668\n9   chromedriver                        0x00000001027e9d00 cxxbridge1$string$len + 324820\n10  chromedriver                        0x0000000102d1ae34 cxxbridge1$str$ptr + 3435328\n11  chromedriver                        0x0000000102d1e14c cxxbridge1$str$ptr + 3448408\n12  chromedriver                        0x0000000102d021a8 cxxbridge1$str$ptr + 3333812\n13  chromedriver                        0x0000000102d1ea0c cxxbridge1$str$ptr + 3450648\n14  chromedriver                        0x0000000102cf39b4 cxxbridge1$str$ptr + 3274432\n15  chromedriver                        0x0000000102d39120 cxxbridge1$str$ptr + 3558956\n16  chromedriver                        0x0000000102d3929c cxxbridge1$str$ptr + 3559336\n17  chromedriver                        0x0000000102d47fb4 cxxbridge1$str$ptr + 3620032\n18  libsystem_pthread.dylib             0x00000001818242e4 _pthread_start + 136\n19  libsystem_pthread.dylib             0x000000018181f0fc thread_start + 8", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"aad6570709c5d80f5ebbca087f354cc0\")>\n\n    def test_citilink(browser):\n        m_video = MVideo(browser)\n        m_video.open_main_page()\n>       item_name, item_price = m_video.open_catalog_and_add_to_cart()\n\ntest_catalog.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/mvideo.py:47: in open_catalog_and_add_to_cart\n    self.click(self.CATALOG_BTN)\n../pages/base_page.py:35: in click\n    element = WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located(locator))\n../.venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n../.venv/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py:156: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n../.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:770: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x106609d30>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector\\\\nfrom javascript error: {\\...0001818242e4 _pthread_start + 136\\\\n19  libsystem_pthread.dylib             0x000000018181f0fc thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector\nE       from javascript error: {\"status\":32,\"value\":\"Unable to locate an element with the xpath expression //a[@data-meta-name='DesktopMenu__category--menu-item' because of the following error:\\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//a[@data-meta-name='DesktopMenu__category--menu-item'' is not a valid XPath expression.\"}\nE         (Session info: chrome=131.0.6778.265); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000102d4faf0 cxxbridge1$str$ptr + 3651580\nE       1   chromedriver                        0x0000000102d48340 cxxbridge1$str$ptr + 3620940\nE       2   chromedriver                        0x00000001027b04b4 cxxbridge1$string$len + 89224\nE       3   chromedriver                        0x00000001027b5398 cxxbridge1$string$len + 109420\nE       4   chromedriver                        0x00000001027b73e8 cxxbridge1$string$len + 117692\nE       5   chromedriver                        0x00000001027b7490 cxxbridge1$string$len + 117860\nE       6   chromedriver                        0x00000001027f45dc cxxbridge1$string$len + 368048\nE       7   chromedriver                        0x000000010282e0fc cxxbridge1$string$len + 604368\nE       8   chromedriver                        0x00000001027e90b0 cxxbridge1$string$len + 321668\nE       9   chromedriver                        0x00000001027e9d00 cxxbridge1$string$len + 324820\nE       10  chromedriver                        0x0000000102d1ae34 cxxbridge1$str$ptr + 3435328\nE       11  chromedriver                        0x0000000102d1e14c cxxbridge1$str$ptr + 3448408\nE       12  chromedriver                        0x0000000102d021a8 cxxbridge1$str$ptr + 3333812\nE       13  chromedriver                        0x0000000102d1ea0c cxxbridge1$str$ptr + 3450648\nE       14  chromedriver                        0x0000000102cf39b4 cxxbridge1$str$ptr + 3274432\nE       15  chromedriver                        0x0000000102d39120 cxxbridge1$str$ptr + 3558956\nE       16  chromedriver                        0x0000000102d3929c cxxbridge1$str$ptr + 3559336\nE       17  chromedriver                        0x0000000102d47fb4 cxxbridge1$str$ptr + 3620032\nE       18  libsystem_pthread.dylib             0x00000001818242e4 _pthread_start + 136\nE       19  libsystem_pthread.dylib             0x000000018181f0fc thread_start + 8\n\n../.venv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:232: InvalidSelectorException"}, "steps": [{"name": "Открытие браузера", "status": "passed", "parameters": [{"name": "url", "value": "'https://www.citilink.ru/'"}], "start": 1737000989640, "stop": 1737000994530}, {"name": "Нажатие на элемент", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSelectorException: Message: invalid selector\nfrom javascript error: {\"status\":32,\"value\":\"Unable to locate an element with the xpath expression //a[@data-meta-name='DesktopMenu__category--menu-item' because of the following error:\\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//a[@data-meta-name='DesktopMenu__category--menu-item'' is not a valid XPath expression.\"}\n  (Session info: chrome=131.0.6778.265); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nStacktrace:\n0   chromedriver                        0x0000000102d4faf0 cxxbridge1$str$ptr + 3651580\n1   chromedriver                        0x0000000102d48340 cxxbridge1$str$ptr + 3620940\n2   chromedriver                        0x00000001027b04b4 cxxbridge1$string$len + 89224\n3   chromedriver                        0x00000001027b5398 cxxbridge1$string$len + 109420\n4   chromedriver                        0x00000001027b73e8 cxxbridge1$string$len + 117692\n5   chromedriver                        0x00000001027b7490 cxxbridge1$string$len + 117860\n6   chromedriver                        0x00000001027f45dc cxxbridge1$string$len + 368048\n7   chromedriver                        0x000000010282e0fc cxxbridge1$string$len + 604368\n8   chromedriver                        0x00000001027e90b0 cxxbridge1$string$len + 321668\n9   chromedriver                        0x00000001027e9d00 cxxbridge1$string$len + 324820\n10  chromedriver                        0x0000000102d1ae34 cxxbridge1$str$ptr + 3435328\n11  chromedriver                        0x0000000102d1e14c cxxbridge1$str$ptr + 3448408\n12  chromedriver                        0x0000000102d021a8 cxxbridge1$str$ptr + 3333812\n13  chromedriver                        0x0000000102d1ea0c cxxbridge1$str$ptr + 3450648\n14  chromedriver                        0x0000000102cf39b4 cxxbridge1$str$ptr + 3274432\n15  chromedriver                        0x0000000102d39120 cxxbridge1$str$ptr + 3558956\n16  chromedriver                        0x0000000102d3929c cxxbridge1$str$ptr + 3559336\n17  chromedriver                        0x0000000102d47fb4 cxxbridge1$str$ptr + 3620032\n18  libsystem_pthread.dylib             0x00000001818242e4 _pthread_start + 136\n19  libsystem_pthread.dylib             0x000000018181f0fc thread_start + 8\n\n", "trace": "  File \"/Users/anton/python_projects/environments/lgcity/.venv/lib/python3.9/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/anton/python_projects/environments/lgcity/pages/base_page.py\", line 35, in click\n    element = WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located(locator))\n  File \"/Users/anton/python_projects/environments/lgcity/.venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n  File \"/Users/anton/python_projects/environments/lgcity/.venv/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py\", line 156, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n  File \"/Users/anton/python_projects/environments/lgcity/.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 770, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n  File \"/Users/anton/python_projects/environments/lgcity/.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/anton/python_projects/environments/lgcity/.venv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "locator", "value": "('xpath', \"//a[@data-meta-name='DesktopMenu__category--menu-item'\")"}], "start": 1737000994530, "stop": 1737000994542}], "start": 1737000989640, "stop": 1737000994547, "uuid": "189305cf-d980-4c27-b316-ba737022b313", "historyId": "493a2ba499c2089f7e49432b9d7b051c", "testCaseId": "493a2ba499c2089f7e49432b9d7b051c", "fullName": "tests.test_catalog#test_citilink", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_catalog"}, {"name": "host", "value": "MacBook-Pro-Anton.local"}, {"name": "thread", "value": "1775-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_catalog"}]}