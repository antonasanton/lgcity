{"name": "test_citi_filters", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"11f69fdf541f67d855b8f4f1af4b0eb0\")>\n\n    def test_citi_filters(browser):\n        # Определение тестовой функции для проверки фильтров на сайте Citilink.\n        citi_filters = CitiFilters(browser)  # Инициализация объекта страницы CitiFilters с использованием переданного браузера.\n        citi_filters.open_main_page()  # Открытие главной страницы сайта Citilink.\n        citi_filters.navigate_to_smartphones()  # Переход в раздел 'Смартфоны и планшеты' через меню каталога.\n    \n>       applied_brand, applied_memory, applied_resolution = citi_filters.apply_filters()  # Применение случайных фильтров: бренда, оперативной памяти и разрешения экрана.\n\ntest_catalog.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/citi_filters.py:45: in apply_filters\n    brand = self.select_random_filter(self.FILTER_BRAND)  # Выбор случайного бренда.\n../pages/citi_filters.py:37: in select_random_filter\n    filters = self.find_elements(filter_locator)  # Получение всех элементов фильтра.\n../pages/base_page.py:31: in find_elements\n    return self.wait.until(EC.visibility_of_all_elements_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"11f69fdf541f67d855b8f4f1af4b0eb0\")>\nmethod = <function visibility_of_all_elements_located.<locals>._predicate at 0x101f5ab80>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../.venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "steps": [{"name": "Открытие браузера", "status": "passed", "parameters": [{"name": "url", "value": "'https://www.citilink.ru/'"}], "start": 1737006938989, "stop": 1737006942670}, {"name": "Нажатие на элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//a[@data-meta-name='DesktopHeaderFixed__catalog-menu']\")"}], "start": 1737006942670, "stop": 1737006943833}, {"name": "Нажатие на элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//span[contains(text(), 'Я согласен')]\")"}], "start": 1737006943833, "stop": 1737006943870}, {"name": "Нажатие на элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//a[@href='/catalog/smartfony/']\")"}], "start": 1737006943878, "stop": 1737006945312}], "start": 1737006938989, "stop": 1737006955391, "uuid": "99f942d2-9c7c-44c4-8e91-308a05e403aa", "historyId": "f685205f561b2955b77cd23aabfafb4a", "testCaseId": "f685205f561b2955b77cd23aabfafb4a", "fullName": "tests.test_catalog#test_citi_filters", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_catalog"}, {"name": "host", "value": "MacBook-Pro-Anton.local"}, {"name": "thread", "value": "3921-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_catalog"}]}